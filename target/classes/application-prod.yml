##################################################
# server info
##################################################
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8100
  #address: localhost
  session-timeout: 30
################################################
#eureka配置
################################################
eureka:
  instance:
    lease-expiration-duration-in-seconds: 10 #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    lease-renewal-interval-in-seconds: 3 #服务刷新时间配置，每隔这个时间会主动心跳一次
    prefer-ip-address: true #以IP地址注册到服务中心
  client:
    enabled: true
    healthcheck:
       enabled: true
    serviceUrl:
      defaultZone: http://172.30.8.52:8761/eureka/
################################################
#数据库配置
################################################
spring:  
  datasource :
    url : jdbc:mysql://127.0.0.1:3306/unieap?characterencoding=utf-8;GenerateSimpleParameterMetadata=true
    username : unieap  
    password : unieap  
    driverClassName : com.mysql.jdbc.Driver
    initialSize : 5
    minIdle : 5
    maxActive : 20
    maxWait : 60000
    #自动检测关闭和空闲连接的间隔
    timeBetweenEvictionRunsMillis : 30000
    #最小生存时间
    minEvictableIdleTimeMillis : 300000
    #validationQuery:SELECT 1 FROM DUAL
    testWhileIdle : true
    #这个参数设置为true，可以保证每次的连接都是正常的，但是。。 性能会降低， 建议使用空闲下检测30s一次， 这样服务器最多30s出现问题后恢复
    testOnBorrow : false
    testOnReturn : false
    #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
    #filters:stat
    #PSCatch
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
################################################
#数据库配置
# 共有8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF。
################################################
logging:
   file: logs/unieap-esb/application-error.log
   pattern:
     console: "%d %-5level %logger : %msg%n"
     file: "%d %-5level [%thread] %logger : %msg%n"
   level:
      org.springframework: ERROR
      org.springframework.web: ERROR
      com.howtodoinjava: ERROR
      org.hibernate: ERROR